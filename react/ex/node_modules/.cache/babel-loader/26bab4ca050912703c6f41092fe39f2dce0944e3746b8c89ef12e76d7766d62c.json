{"ast":null,"code":"var _jsxFileName = \"C:\\\\aws\\\\ljh\\\\react\\\\ex\\\\src\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    default:\n      return state;\n  }\n}\nfunction Counter() {\n  _s();\n  const [number, dispatch] = useReducer(reducer, 0);\n  const onIncrease = () => {\n    dispatch({\n      type: 'INCREMENT'\n    });\n  };\n  const onDecrease = () => {\n    dispatch({\n      type: \"DECREMENT\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onIncrease,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDecrease,\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Counter, \"tox+s13N8TwVlhJ6dsdPiTznuCY=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useReducer","useState","jsxDEV","_jsxDEV","reducer","state","action","type","Counter","_s","number","dispatch","onIncrease","onDecrease","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/aws/ljh/react/ex/src/Counter.js"],"sourcesContent":["import { useReducer, useState } from \"react\";\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction Counter() {\r\n    const [number, dispatch] = useReducer(reducer, 0);\r\n\r\n    const onIncrease = () => {\r\n        dispatch({type:'INCREMENT'});\r\n    }\r\n    const onDecrease = () => {\r\n        dispatch({type:\"DECREMENT\"});\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>{number}</h1>\r\n            <button onClick={onIncrease}>+1</button>\r\n            <button onClick={onDecrease}>-1</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Counter;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC5B,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAOF,KAAK,GAAG,CAAC;IACpB,KAAK,WAAW;MACZ,OAAOA,KAAK,GAAG,CAAC;IACpB;MACI,OAAOA,KAAK;EACpB;AACJ;AAEA,SAASG,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACI,OAAO,EAAE,CAAC,CAAC;EAEjD,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAAC;MAACJ,IAAI,EAAC;IAAW,CAAC,CAAC;EAChC,CAAC;EACD,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACrBF,QAAQ,CAAC;MAACJ,IAAI,EAAC;IAAW,CAAC,CAAC;EAChC,CAAC;EACD,oBACIJ,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAKJ;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjBf,OAAA;MAAQgB,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxCf,OAAA;MAAQgB,OAAO,EAAEN,UAAW;MAAAC,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd;AAACT,EAAA,CAhBQD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAkBhB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}